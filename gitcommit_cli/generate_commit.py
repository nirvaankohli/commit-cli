import re 
from diff_reader import DiffReader
from commit_msg.huggingfacetransformers import llm

def generate_commit_message(diff: str, open_ai_key: str = "") -> str:

    """
    
    Generate a commit message based on the provided diff(staged commit) using a pre-trained model.
    
    Args:

        diff (str): The diff string from which to generate the commit message.
        
        open_ai_key (str): Optional OpenAI API key for additional functionality(the user has to provide the key).
        
    Returns:

        str: A commit message generated by the model(generated by a hugging face transformer).
        
    
    """

    if diff.strip() == "":

        return "No changes detected."
    
    elif open_ai_key.strip() != "":

        # PUT IN OPENAI FUNCTIONALITY HERE LATER

        return "OpenAI functionality not yet implemented."

    else:

        # Use our hugging face transformer model wrapper class to generate the commit message

        model = llm()

        commit_message = model.generate_commit_message(diff)

        return commit_message

    
    

    

        




        
